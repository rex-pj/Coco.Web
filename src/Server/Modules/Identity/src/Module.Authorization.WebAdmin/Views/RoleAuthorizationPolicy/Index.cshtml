@model AuthorizationPolicyRolesModel
@{
    ViewData["Title"] = "Authorization policy roles management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {
    <script src="~/authorizationmanagement/js/role-authorizationpolicy.js" asp-append-version="true"></script>
}

<div class="card-header bg-dark text-light">
    <div class="row">
        <div class="col-auto me-auto">
            <a asp-action="Index" asp-controller="AuthorizationPolicy" class="btn btn-sm btn-outline-secondary">
                <i class="fa fa-arrow-left"></i>
            </a>
            <button class="btn btn-sm text-light mr-2" type="button" data-bs-toggle="collapse"
                    data-bs-target="#searchPanel" aria-expanded="true" aria-controls="searchPanel">
                <i class="fa fa-search"></i>
            </button>
            @ViewData["Title"]
        </div>
        <div class="col-auto">
            @if (Model.CanCreate)
            {
                <button class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#grantRoleModal">
                    <i class="fa fa-plus"></i>
                </button>
            }
        </div>
    </div>
</div>
<div class="card bg-light">
    <div class="card-body">
        <h5 class="card-title">@Model.Name</h5>
        <p class="card-text">See the user roles @Model.Description</p>
    </div>

    <partial name="_SearchForm" model="Model.Filter" />

    <div class="data-table">
        <partial name="_RoleAuthorizationPolicyTable" />
        <div class="spinner-grow loading my-3 d-none me-auto ml-auto" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
</div>

@if (Model.CanCreate)
{
    var roleAuthorizationPolicy = new RoleAuthorizationPolicyModel
    {
        AuthorizationPolicyId = Model.Id,
        AuthorizationPolicyName = Model.Name,
        CurrentRoleIds = Model.Collections.Select(x => x.Id)
    };
    <partial name="_GrantRoleAuthorizationPolicy" model="roleAuthorizationPolicy" />
}
